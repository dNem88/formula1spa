{"version":3,"file":"static/js/994.a09825dc.chunk.js","mappings":"qJACA,EAAuB,mBAAvB,EAAoD,sB,SCYpD,MAVA,YAAmD,IAApCA,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,QAEpC,OACI,kBAAMC,SAAUF,EAAeG,UAAWC,EAA1C,WACI,eAAID,UAAWC,EAAf,SAAgCH,IAC/BF,O,mECPb,EAAwB,qBAAxB,EAAqD,qB,SCYrD,MAVA,YAA2E,IAA3DM,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,SAA2B,IAAjBC,SAAAA,OAAiB,SAEtE,OACI,UAAC,EAAAC,SAAD,YACI,kBAAOR,UAAWC,EAAcQ,QAASN,EAAzC,SAA8CE,KAC9C,kBAAOL,UAAWC,EAAcC,KAAMA,EAAMC,GAAIA,EAAIO,YAAaP,EAAIC,MAAOA,EAAOE,SAAUA,EAAUK,SAAUJ,S,mECP7H,EAA4B,gC,SCS5B,EAPqBK,EAAAA,YAAiB,SAACC,EAAOC,GAE1C,OACI,mBAAQd,UAAWC,EAAkBC,KAAK,SAASY,IAAKA,EAAxD,SAA+DD,EAAME,W,8JCL7E,EAAwB,wB,uCCwExB,MAjEA,WAEI,IAAIC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,UAAS,CACrCC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,aAAc,KALlB,eAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAAYjB,EAAAA,YAElB,SAASkB,EAAcC,GAAI,IAAD,EACtBH,GAAY,kBACLD,GADI,mBACOI,EAAEC,OAAO7B,GAAK4B,EAAEC,OAAO5B,QAD9B,wBACmD,IADnD,KAfC,wCAmBhB,WAA6B2B,GAA7B,8EACIA,EAAEE,iBACFJ,EAAUK,QAAQC,UAAW,EAFjC,kBAI6BnB,EAAQoB,SAAST,GAJ9C,WAIYU,EAJZ,QAKqBC,cAAgBD,EAASE,YAClCpB,EAAS,gBAETkB,EAASG,MARrB,uBASYX,EAAUK,QAAQC,UAAW,EACvB,IAAIM,MAAMJ,EAASG,MAAME,SAV3C,YAYYL,EAASK,QAZrB,uBAaYb,EAAUK,QAAQC,UAAW,EACvB,IAAIM,MAAMJ,EAASK,SAdrC,0DAiBQb,EAAUK,QAAQC,UAAW,EAC7BP,GAAY,kBACLD,GADI,IAEPD,aAAc,KAAIgB,WApB9B,2DAnBgB,sBA4ChB,OACI,UAACC,EAAA,EAAD,CAAM9C,cA7CM,4CA6CwBC,QAAS,iBAA7C,WACI,SAAC8C,EAAA,EAAD,CAAO1C,KAAM,OAAQI,SAAUwB,EAAezB,aAAc,WAAYF,GAAI,WAAYC,MAAOuB,EAASL,YACxG,SAACsB,EAAA,EAAD,CAAO1C,KAAM,OAAQI,SAAUwB,EAAezB,aAAc,gBAAiBF,GAAI,QAASC,MAAOuB,EAASJ,SAC1G,SAACqB,EAAA,EAAD,CAAO1C,KAAM,WAAYI,SAAUwB,EAAezB,aAAc,WAAYF,GAAI,WAAYC,MAAOuB,EAASH,YAC5G,SAACoB,EAAA,EAAD,CAAO1C,KAAM,WAAYI,SAAUwB,EAAezB,aAAc,mBAAoBF,GAAI,kBAAmBC,MAAOuB,EAASF,mBAC3H,gCACI,cAAGzB,UAAWC,EAAd,SAA6B0B,EAASD,gBACtC,kDACA,2BACI,uCACA,oDACA,kDACA,0CAGR,SAACmB,EAAA,EAAD,CAAc9B,KAAM,WAAYD,IAAKe","sources":["webpack://formula1/./src/components/common/form/form.module.css?038d","components/common/form/Form.js","webpack://formula1/./src/components/common/input/input.module.css?f862","components/common/input/Input.js","webpack://formula1/./src/components/common/submitButton/submitButton.module.css?8f40","components/common/submitButton/SubmitButton.js","webpack://formula1/./src/components/register/Register/register.module.css?7fe6","components/register/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__YNLZd\",\"heading\":\"form_heading__hr62F\"};","import React from 'react'\r\nimport styles from './form.module.css'\r\n\r\nfunction Form({children, submitHandler, heading}) {\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={styles.form}>\r\n            <h2 className={styles.heading}>{heading}</h2>\r\n            {children}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_input__DBzVF\",\"label\":\"input_label__rNDlu\"};","import React, {Fragment} from 'react'\r\nimport styles from './input.module.css'\r\n\r\nfunction Input({type, id, value, labelContent, onChange, readonly=false}) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <label className={styles.label} htmlFor={id}>{labelContent}</label>\r\n            <input className={styles.input} type={type} id={id} placeholder={id} value={value} onChange={onChange} readOnly={readonly}></input>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Input","// extracted by mini-css-extract-plugin\nexport default {\"submitBtn\":\"submitButton_submitBtn__3PbiN\"};","import React from 'react'\r\nimport styles from './submitButton.module.css'\r\n\r\nconst SubmitButton = React.forwardRef((props, ref) => {\r\n\r\n    return (\r\n        <button className={styles.submitBtn} type='submit' ref={ref} >{props.text}</button>\r\n    )\r\n}) \r\n\r\nexport default SubmitButton","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"register_error__FuITU\"};","import React, { useState,  useContext } from 'react';\r\nimport userContext from '../../../context/userContext'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport styles from './register.module.css'\r\nimport Input from '../../common/input/Input'\r\nimport Form from '../../common/form/Form'\r\nimport SubmitButton from '../../common/submitButton/SubmitButton'\r\n\r\nfunction Register() {\r\n\r\n    let context = useContext(userContext);\r\n    const navigate = useNavigate()\r\n\r\n    const [formdata, setFormdata] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errorMessage: ''\r\n    })\r\n    const submitBtn = React.createRef()\r\n\r\n    function changeHandler(e) {\r\n        setFormdata({\r\n            ...formdata, [e.target.id]: e.target.value, errorMessage: ''\r\n        })\r\n    }\r\n    async function submitHandler(e) {\r\n        e.preventDefault();\r\n        submitBtn.current.disabled = true;\r\n        try {\r\n            let response = await context.register(formdata)\r\n            if (response.acknowledged && response.insertedId) {\r\n                navigate('/auth/login')\r\n            }\r\n            if (response.error) {\r\n                submitBtn.current.disabled = false;\r\n                throw new Error(response.error.message)\r\n            }\r\n            if (response.message) {\r\n                submitBtn.current.disabled = false;\r\n                throw new Error(response.message)\r\n            }\r\n        } catch(err) {\r\n            submitBtn.current.disabled = false;\r\n            setFormdata({\r\n                ...formdata,\r\n                errorMessage: err.message\r\n            })\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <Form submitHandler={submitHandler} heading={'CREATE ACCOUNT'}>\r\n            <Input type={'text'} onChange={changeHandler} labelContent={'Username'} id={'username'} value={formdata.username}/>\r\n            <Input type={'text'} onChange={changeHandler} labelContent={'Email address'} id={'email'} value={formdata.email}/>\r\n            <Input type={'password'} onChange={changeHandler} labelContent={'Password'} id={'password'} value={formdata.password}/>\r\n            <Input type={'password'} onChange={changeHandler} labelContent={'Confirm password'} id={'confirmPassword'} value={formdata.confirmPassword}/>\r\n            <section>\r\n                <p className={styles.error}>{formdata.errorMessage}</p>\r\n                <p >Password must contain</p>\r\n                <ul>\r\n                    <li>Uppercase</li>\r\n                    <li>Lowercase (at least 2)</li>\r\n                    <li>8 or more characters</li>\r\n                    <li>Number</li>\r\n                </ul>\r\n            </section>\r\n            <SubmitButton text={'REGISTER'} ref={submitBtn}/>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Register"],"names":["children","submitHandler","heading","onSubmit","className","styles","type","id","value","labelContent","onChange","readonly","Fragment","htmlFor","placeholder","readOnly","React","props","ref","text","context","useContext","userContext","navigate","useNavigate","useState","username","email","password","confirmPassword","errorMessage","formdata","setFormdata","submitBtn","changeHandler","e","target","preventDefault","current","disabled","register","response","acknowledged","insertedId","error","Error","message","Form","Input","SubmitButton"],"sourceRoot":""}