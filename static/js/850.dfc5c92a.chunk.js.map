{"version":3,"file":"static/js/850.dfc5c92a.chunk.js","mappings":"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","sources":["assets/images/drivers/driver-images.js","webpack://formula1/./src/components/common/titleHeader/commonHeader.module.css?a7f2","components/common/titleHeader/CommonHeader.js","webpack://formula1/./src/components/drivers/driversLayout/driversLayout.module.css?3b04","webpack://formula1/./src/components/drivers/driver/driver.module.css?1465","components/drivers/driver/Driver.js","components/drivers/DriversList/DriversList.js","components/drivers/driversLayout/DriversLayout.js","utils/api/heroku_api/hDrivers.js"],"sourcesContent":["import hamilton from './hamilton.jpg'\r\nimport verstappen from './verstappen.jpg'\r\nimport albon from './albon.jpg'\r\nimport alonso from './alonso.jpg'\r\nimport bottas from './bottas.jpg'\r\nimport gasly from './gasly.jpg'\r\nimport latifi from './latifi.jpg'\r\nimport leclerc from './leclerc.jpg'\r\nimport mazepin from './mazepin.jpg'\r\nimport norris from './norris.jpg'\r\nimport ocon from './ocon.jpg'\r\nimport perez from './perez.jpg'\r\nimport ricciardo from './ricciardo.jpg'\r\nimport sainz from './sainz.jpg'\r\nimport schumacher from './schumacher.jpg'\r\nimport stroll from './stroll.jpg'\r\nimport tsunoda from './tsunoda.jpg'\r\nimport vettel from './vettel.jpg'\r\nimport zhou from './zhou.jpg'\r\nimport russel from './russel.jpg'\r\n\r\n\r\n\r\nconst drivers = {hamilton, verstappen, russel, albon, alonso, vettel, schumacher, stroll, sainz, tsunoda, zhou, ricciardo, perez, norris, leclerc, ocon, mazepin, latifi, gasly, bottas}\r\n\r\nexport default drivers","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"commonHeader_wrapper__1CJfw\",\"header\":\"commonHeader_header__HCSD2\",\"description\":\"commonHeader_description__-F+l4\"};","import React from 'react'\r\nimport styles from './commonHeader.module.css'\r\n\r\n\r\nfunction CommonHeader({header, description}){\r\n\r\n    return (\r\n        <div className={styles['wrapper']}>\r\n            <div className={styles.header}>\r\n                <h1>{header}</h1>\r\n            </div>\r\n            <div className={styles.description}>\r\n                <p >{description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommonHeader","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"driversLayout_main-container__urOX7\"};","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"driver_main-container__4tL7P\",\"driver-name-container\":\"driver_driver-name-container__OJ01U\",\"name-sub-container\":\"driver_name-sub-container__Qr12l\",\"flag-container\":\"driver_flag-container__gqTvm\",\"grid-wrapper\":\"driver_grid-wrapper__-L0FN\",\"team-name\":\"driver_team-name__nWGo0\",\"race-number\":\"driver_race-number__SobaY\",\"image-container\":\"driver_image-container__V34wv\"};","import React from 'react'\r\nimport styles from './driver.module.css'\r\nimport flags from '../../../assets/images/flags/flag-images'\r\nimport drivers from '../../../assets/images/drivers/driver-images'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nfunction Driver(props) {\r\n    const navigate = useNavigate()\r\n    \r\n    function clickHandler(e) {\r\n        console.log(e.target)\r\n        navigate(`/drivers/${props._id}`)\r\n    }\r\n\r\n    return (\r\n         <section id={props._id} className={styles['main-container']} onClick={clickHandler}>\r\n            <div className={styles['driver-name-container']}>\r\n                <div className={styles['name-sub-container']}>\r\n                    <span>{props.givenName}</span>\r\n                    <span>{props.familyName}</span>\r\n                </div>\r\n                <div className={styles['flag-container']}>\r\n                    <img src={flags[props.country.toLowerCase()]} alt='national-flag' loading='lazy'/>\r\n                </div>\r\n            </div>\r\n            <div className={styles['grid-wrapper']}>\r\n                <p className={styles['team-name']}>{props.team}</p>\r\n                <p className={styles['race-number']}>{props.permanentNumber}</p>\r\n                <div className={styles['image-container']}>\r\n                    <img src={drivers[props.familyName.toLowerCase()]} alt='f1-driver-image' loading='lazy'/>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Driver","import React, {Fragment} from 'react'\r\nimport Driver from '../driver/Driver'\r\n\r\nfunction DriversList({drivers}) {\r\n\r\n    return (\r\n        <Fragment>\r\n            {!drivers ? null :\r\n                drivers.map(x => {\r\n                    return <Driver key={x._id} {...x}/>\r\n                })\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DriversList","import React, {useState, useEffect, Fragment} from 'react'\r\nimport styles from './driversLayout.module.css'\r\nimport api from '../../../utils/api/heroku_api/hDrivers'\r\nimport ErrorComp from '../../common/errorComp/ErrorComp'\r\nimport CommonHeader from '../../common/titleHeader/CommonHeader'\r\nimport DriversList from '../DriversList/DriversList'\r\n\r\nconst headerProps = {\r\n    header: 'F1 Drivers 2022',\r\n    description: \"Check out this season's official F1 line-up. Full breakdown of drivers, points and current positions. Follow your favourite F1 drivers on and off the track.\"\r\n}\r\n\r\nfunction DriversLayout() {\r\n    const [state, setState] = useState({error: null, errorMessage: null, drivers: null})\r\n\r\n    useEffect(() => {\r\n        async function FetchDrivers() {\r\n            try {\r\n                let response = await api.getDrivers()\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch drivers!')\r\n                }\r\n                let json = await response.json()\r\n                setState({error: null, errorMessage: null, drivers: json})\r\n            } catch(err) {\r\n                setState({error: true, errorMessage: err.message || 'undefined error', drivers: null})\r\n            }\r\n        }\r\n        FetchDrivers()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            {state.error ? <ErrorComp errorMessage={state.errorMessage}/> : null}\r\n            <section className={styles['main-container']}>\r\n                <CommonHeader {...headerProps}/>\r\n                {!state.error && !state.drivers ? null :\r\n                    <DriversList {...state}/>\r\n                }\r\n            </section>\r\n        \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DriversLayout","async function getDrivers() {\r\n    try {\r\n        const response = await fetch('https://boiling-brushlands-51072.herokuapp.com/drivers', {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch(err) {\r\n        return err\r\n    }\r\n}\r\n\r\nasync function getDriverById(id) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/drivers/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\nasync function getDriverByName(name) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/drivers?name=${encodeURI(name)}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nconst api = {\r\n    getDriverById, getDrivers, getDriverByName\r\n}\r\n\r\nexport default api"],"names":["drivers","hamilton","verstappen","russel","albon","alonso","vettel","schumacher","stroll","sainz","tsunoda","zhou","ricciardo","perez","norris","leclerc","ocon","mazepin","latifi","gasly","bottas","header","description","className","styles","props","navigate","useNavigate","id","_id","onClick","e","console","log","target","givenName","familyName","src","flags","country","toLowerCase","alt","loading","team","permanentNumber","Fragment","map","x","headerProps","useState","error","errorMessage","state","setState","useEffect","api","response","ok","Error","json","message","FetchDrivers","ErrorComp","CommonHeader","getDrivers","fetch","headers","credentials","getDriverById","getDriverByName","name","encodeURI"],"sourceRoot":""}