{"version":3,"file":"static/js/92.c5590a72.chunk.js","mappings":"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","sources":["webpack://formula1/./src/components/home/schedule/schedule.module.css?da27","webpack://formula1/./src/components/common/flag/flag.module.css?a274","components/common/flag/Flag.js","webpack://formula1/./src/components/home/activeSchedule/activeSchedule.module.css?2ab9","webpack://formula1/./src/components/home/ScheduleClock/clock.module.css?03be","components/home/ScheduleClock/Clock.js","webpack://formula1/./src/components/home/ScheduleRaceStart/raceTime.module.css?b699","utils/common/converRaceTime.js","components/home/ScheduleRaceStart/RaceTime.js","components/home/activeSchedule/ActiveSchedule.js","components/home/schedule/Schedule.js","webpack://formula1/./src/components/home/slider/slider.module.css?0c42","components/home/slider/Slider.js","hooks/useSchedule.js","utils/common/compareDates.js","webpack://formula1/./src/components/home/ScheduleWrapper/scheduleWrapper.module.css?cdc4","components/home/ScheduleWrapper/ScheduleWrapper.js","utils/api/heroku_api/schedule.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/common/transformSchedule.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"schedule_main-container__p11IS\",\"active-main-container\":\"schedule_active-main-container__4EbVX\",\"country\":\"schedule_country__ahDI0\",\"day\":\"schedule_day__cAkq-\",\"month\":\"schedule_month__PZn5U\"};","// extracted by mini-css-extract-plugin\nexport default {\"image-container\":\"flag_image-container__Hgy6E\",\"left-flag\":\"flag_left-flag__YWM2P\"};","import React from 'react'\r\nimport styles from './flag.module.css'\r\nimport flags from '../../../assets/images/flags/flag-images'\r\n\r\nfunction Flag(props) {\r\n    \r\n    return (\r\n        <div className={styles[props.classname]}>\r\n            <img src={flags[props.imageBase]} alt={`${props.imageBase}-flag`} loading='lazy'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flag","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"activeSchedule_wrapper__GdwKw\",\"content-container\":\"activeSchedule_content-container__DtuVf\",\"country\":\"activeSchedule_country__9PPS8\",\"fade\":\"activeSchedule_fade__mdc3k\",\"gp-name\":\"activeSchedule_gp-name__K6iF+\",\"weekend-duration\":\"activeSchedule_weekend-duration__bDCij\"};","// extracted by mini-css-extract-plugin\nexport default {\"clock-banner-container\":\"clock_clock-banner-container__BhX3u\",\"clock\":\"clock_clock__tnFbD\",\"time-container\":\"clock_time-container__mTmsC\",\"fade\":\"clock_fade__AW2TZ\",\"thicking\":\"clock_thicking__0KbCz\"};","import React, {useState, useEffect} from 'react'\r\nimport clock from '../../../assets/images/clock.png'\r\nimport styles from './clock.module.css'\r\n\r\nfunction Clock() {\r\n    let initialHours = new Date().getHours()\r\n    let initialMinutes = new Date().getMinutes()\r\n    if (+initialHours < 10) {\r\n        initialHours = `0${initialHours}`\r\n    }\r\n    if (+initialMinutes < 10) {\r\n        initialMinutes = `0${initialMinutes}`\r\n    }\r\n    let initial = `${initialHours} : ${initialMinutes}`\r\n    let [time, setTime] = useState(initial);\r\n\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => {\r\n            let hours = new Date().getHours()\r\n            let minutes = new Date().getMinutes()\r\n            if (+hours < 10) {\r\n                hours = `0${hours}`\r\n            }\r\n            if (+minutes < 10) {\r\n                minutes = `0${minutes}`\r\n            }\r\n            \r\n            let newTime = `${hours} : ${minutes}`\r\n            \r\n            setTime(newTime)\r\n        }, 60000)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [time])\r\n\r\n\r\n    return (\r\n        <div className={styles['clock-banner-container']}>\r\n            <div className={styles['clock']}>\r\n                <img src={clock} alt='clock'/>\r\n            </div>\r\n            <div className={styles['time-container']}>\r\n                <p >Your Time</p>\r\n                <p className={styles['thicking']}>{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Clock","// extracted by mini-css-extract-plugin\nexport default {\"race-time-container\":\"raceTime_race-time-container__kOR0l\",\"fade\":\"raceTime_fade__UTNIY\",\"left-td\":\"raceTime_left-td__5+hi9\",\"right-td\":\"raceTime_right-td__rXC6f\"};","\r\nfunction convertRaceTime(timeInMilliseconds) {\r\n    \r\n      if (timeInMilliseconds !== null) {\r\n          let utcHours = new Date(timeInMilliseconds).getUTCHours()\r\n          let localHours = new Date(timeInMilliseconds).getHours()\r\n          let utcMinutes = new Date(timeInMilliseconds).getUTCMinutes()\r\n          let localMinutes = new Date(timeInMilliseconds).getMinutes()\r\n          utcHours = (utcHours < 10 ? `0${utcHours}` : utcHours)\r\n          localHours = (localHours < 10 ? `0${localHours}` : localHours)\r\n          utcMinutes = (utcMinutes < 10 ? `0${utcMinutes}` : utcMinutes)\r\n          localMinutes = (localMinutes < 10 ? `0${localMinutes}` : localMinutes)\r\n           let utcStart = `${utcHours}:${utcMinutes}`\r\n           let localStart = `${localHours}:${localMinutes}`\r\n          return [utcStart, localStart]\r\n      } else {\r\n          return ['','']\r\n      }\r\n}\r\n\r\nexport default convertRaceTime","import React from 'react'\r\nimport styles from './raceTime.module.css'\r\nimport convertRaceTime from '../../../utils/common/converRaceTime'\r\n\r\nfunction RaceTime(props) {\r\n    const [utcTime, localTime] = convertRaceTime(props.raceStartUTC)\r\n   \r\n    return (\r\n        <table className={styles['race-time-container']}>\r\n            <tbody>\r\n                <tr>\r\n                    <td className={styles['left-td']}>Race</td>\r\n                    <td className={styles['right-td']}></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className={styles['left-td']}>Your Local Time</td>\r\n                    <td className={styles['right-td']}>{localTime}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className={styles['left-td']}>GMT Time</td>\r\n                    <td className={styles['right-td']}>{utcTime}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default RaceTime","import React from 'react'\r\nimport styles from './activeSchedule.module.css'\r\nimport Flag from '../../common/flag/Flag'\r\nimport Clock from '../ScheduleClock/Clock';\r\nimport RaceTime from '../ScheduleRaceStart/RaceTime';\r\n\r\nfunction ActiveSchedule(props) {\r\n    let raceTitle = `formula 1 ${props.raceName} ${props.season}`.toUpperCase();\r\n    \r\n    return (\r\n        <div className={styles['wrapper']}>\r\n            <div className={styles['content-container']}>\r\n                <Flag classname={props.classname} imageBase={props.imageBase}/>\r\n                <h5 className={styles.country}>{props.country}</h5>\r\n                <h2 className={styles[\"gp-name\"]}>{raceTitle}</h2>\r\n                <h6 className={styles['weekend-duration']}>{props.weekend}</h6>\r\n            </div>\r\n            <Clock/>\r\n            <RaceTime raceStartUTC={props.raceStartUTC}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveSchedule","import React, {Fragment} from 'react'\r\nimport styles from './schedule.module.css'\r\nimport Flag from '../../common/flag/Flag'\r\nimport transformSchedule from '../../../utils/common/transformSchedule'\r\nimport ActiveSchedule from '../activeSchedule/ActiveSchedule'\r\n\r\nfunction Schedule(props) {\r\n    const transformedProps = transformSchedule(props);\r\n    let classname = 'main-container'\r\n    if (props._id === props.activeId) {\r\n        classname = 'active-main-container'\r\n    } else {\r\n        classname = 'main-container'\r\n    }\r\n \r\n    return (\r\n        <div id={props._id} className={styles[classname]} onClick={props.clickHandler}>\r\n            {classname === 'main-container' ? \r\n                <Fragment>\r\n                    <Flag classname={'image-container'} imageBase={transformedProps.imageBase}/>\r\n                    <h3 className={styles.country}>{transformedProps.country}</h3>\r\n                    <h1 className={styles.day}>{transformedProps.day}</h1>\r\n                    <h3 className={styles.month}>{transformedProps.month}</h3>\r\n                </Fragment> : <ActiveSchedule {...transformedProps} classname={'left-flag'}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Schedule","// extracted by mini-css-extract-plugin\nexport default {\"slider\":\"slider_slider__kkUeU\"};","import React from 'react'\r\n\r\nimport styles from './slider.module.css'\r\n\r\nfunction Slider(props) {\r\n\r\n    return (\r\n        <div className={styles.slider}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Slider","import {useState, useEffect} from 'react'\r\nimport schedule from '../utils/api/heroku_api/schedule'\r\n\r\n\r\nfunction useSchedule() {\r\n    const [raceSchedule, setRaceSchedule] = useState({schedule: null, error: null, hasError: null})\r\n\r\n    useEffect(() => {\r\n        async function FetchSchedule() {\r\n            try {\r\n                let response = await schedule.getFullSchedule()\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch schedule!!!')\r\n                }\r\n                let scheduleList = await response.json()\r\n                if (scheduleList.length < 15) {\r\n                    throw new Error('Could not get full schedule!!!')\r\n                }\r\n                setRaceSchedule({schedule: scheduleList, error: null, hasError: null})\r\n            } catch(err) {\r\n                setRaceSchedule({schedule: null, error: err.message, hasError: true})\r\n            }\r\n        }\r\n        FetchSchedule()\r\n    }, [])\r\n    return raceSchedule;\r\n}\r\n\r\nexport default useSchedule","function compareDates(schedule=[]) {\r\n    let today = new Date().getTime()\r\n    if (schedule.length > 0) {\r\n      \r\n        let raceObject = schedule.find(x => {\r\n            let raceDate = new Date(x.date).getTime()\r\n            return raceDate > today\r\n        })\r\n        return raceObject._id;\r\n    }\r\n    return []\r\n}\r\n\r\nexport default compareDates;","// extracted by mini-css-extract-plugin\nexport default {\"schedule\":\"scheduleWrapper_schedule__V5VbI\"};","import React, {useState, useEffect} from 'react'\r\nimport Schedule from '../schedule/Schedule';\r\nimport Slider from '../slider/Slider';\r\nimport Spinner from '../../common/spinner/Spinner';\r\nimport ErrorComp from '../../common/errorComp/ErrorComp';\r\nimport useSchedule from '../../../hooks/useSchedule';\r\nimport compareDates from '../../../utils/common/compareDates';\r\nimport styles from './scheduleWrapper.module.css'\r\n\r\nfunction ScheduleWrapper() {\r\n    const fullSchedule = useSchedule();\r\n    const [schedule, setSchedule] = useState({\r\n        activeId: '',\r\n        fetch: false\r\n    })\r\n    let upcomingRaceId\r\n    if (fullSchedule.schedule && schedule.fetch === false) {\r\n        upcomingRaceId = compareDates(fullSchedule.schedule)\r\n    }\r\n    useEffect(() => {\r\n        if (upcomingRaceId ) {\r\n            setSchedule({\r\n                activeId: upcomingRaceId,\r\n                fetch: true\r\n            })\r\n        }\r\n    }, [upcomingRaceId])\r\n    \r\n     function scheduleClickHandler(e) {\r\n         setSchedule({...schedule, activeId: e.target.id})\r\n     }\r\n     if (fullSchedule.error && fullSchedule.hasError) {\r\n         return <ErrorComp errorMessage={fullSchedule.error}/>\r\n     }\r\n    if (fullSchedule.schedule && !fullSchedule.hasError) {\r\n        return (\r\n        \r\n            <section className={styles['schedule']}>\r\n                    <Slider>\r\n                        {fullSchedule.schedule ? fullSchedule.schedule.map((x,i) => {\r\n                            return <Schedule clickHandler={scheduleClickHandler} key={x._id} {...x} activeId={schedule.activeId}/>\r\n                        }) : <Spinner/>}\r\n                    </Slider>\r\n            </section>  \r\n            )\r\n    } else if (!fullSchedule.schedule && !fullSchedule.hasError) {\r\n        return <Spinner/>\r\n    }\r\n    \r\n}\r\n\r\nexport default ScheduleWrapper","const heroku_api_url = 'https://boiling-brushlands-51072.herokuapp.com'\r\n\r\nasync function getFullSchedule() {\r\n    try{\r\n        const response = await fetch(`${heroku_api_url}/schedule`, {\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        \r\n        return response\r\n    } catch(err) {\r\n        return err\r\n    }\r\n}\r\nasync function getScheduleById(id) {\r\n    try {\r\n        const response = await fetch(`${heroku_api_url}/schedule/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include',\r\n        })\r\n        let data = await response.json()\r\n        return data\r\n    } catch (e) {\r\n        return {\r\n            error: {\r\n                message: 'Failed to get current race schedule!'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n   getFullSchedule,\r\n   getScheduleById\r\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function transformSchedule(props) {\r\n    let transformed = {}\r\n    let months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december']\r\n    \r\n    if (props !== null & props !== undefined) {\r\n        let raceDate = props.date.split('-');\r\n        let raceStart = [raceDate[0], Number(raceDate[1])-1, Number(raceDate[2]), ...props.time.split(':').slice(0,2)]\r\n        let UTCinMs = Date.UTC(...raceStart) /*in UTC Time*/\r\n        transformed.raceStartUTC = UTCinMs\r\n        let date1 = new Date(props.date);\r\n        date1.setDate(date1.getDate() - 2)\r\n        let weekendStart = `${date1.getDate()} ${months[date1.getMonth()].substring(0,3).toUpperCase()} ${date1.getFullYear()}`\r\n        transformed.country = props.Circuit.Location.country.toUpperCase()\r\n        let date = props.date.split('-');\r\n        transformed.date = props.date;\r\n        transformed.month = months[Number(date[1])-1].substring(0,3).toUpperCase();\r\n        transformed.day = Number(date[2])\r\n        transformed.imageBase = props.Circuit.Location.country.toLowerCase().split(' ').join('_')\r\n        transformed.raceName = props.raceName;\r\n        transformed.season = Number(props.season);\r\n        transformed.weekend = `${weekendStart} - ${transformed.day} ${transformed.month} ${props.season}`;\r\n        return transformed\r\n    } else {\r\n        return props\r\n    }\r\n}   \r\n\r\nexport default transformSchedule"],"names":["props","className","styles","classname","src","flags","imageBase","alt","loading","initialHours","Date","getHours","initialMinutes","getMinutes","initial","useState","time","setTime","useEffect","timer","setTimeout","hours","minutes","newTime","clearTimeout","clock","timeInMilliseconds","utcHours","getUTCHours","localHours","utcMinutes","getUTCMinutes","localMinutes","convertRaceTime","raceStartUTC","utcTime","localTime","raceTitle","raceName","season","toUpperCase","country","weekend","transformedProps","transformSchedule","_id","activeId","id","onClick","clickHandler","Fragment","day","month","children","schedule","error","hasError","raceSchedule","setRaceSchedule","response","ok","Error","json","scheduleList","length","message","FetchSchedule","today","getTime","raceObject","find","x","date","upcomingRaceId","fullSchedule","useSchedule","fetch","setSchedule","scheduleClickHandler","e","target","compareDates","ErrorComp","errorMessage","map","i","Spinner","heroku_api_url","getFullSchedule","headers","credentials","getScheduleById","data","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","transformed","months","undefined","raceDate","split","raceStart","Number","slice","UTCinMs","UTC","date1","setDate","getDate","weekendStart","getMonth","substring","getFullYear","Circuit","Location","toLowerCase","join"],"sourceRoot":""}