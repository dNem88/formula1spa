{"version":3,"file":"static/js/718.78f6f630.chunk.js","mappings":"oJACA,EAAiC,mC,SCWjC,MATA,YAA6B,IAARA,EAAO,EAAPA,KAEjB,OACI,gBAAKC,UAAWC,EAAhB,UACI,wBAAKF,Q,kECNjB,G,QAAsB,uBAAtB,EAAoD,wBAApD,EAAsF,0B,SCatF,MAXA,YAAqC,IAAlBG,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAGtB,OACI,gBAAIH,UAAWC,EAAf,WACI,eAAID,UAAWC,EAAf,SAA8BC,KAC9B,eAAIF,UAAWC,EAAf,SAAgCE,QCR5C,EAAwB,qB,UCDT,SAASC,EAAQC,GAG9B,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,GACvHD,EAAQC,GCPE,SAASK,EAAgBC,EAAGC,GAMzC,OALAF,EAAkBG,OAAOC,gBAAkB,SAAyBH,EAAGC,GAErE,OADAD,EAAEI,UAAYH,EACPD,GAGFD,EAAgBC,EAAGC,GCLb,SAASI,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAASR,UAAYI,OAAOO,OAAOF,GAAcA,EAAWT,UAAW,CACrED,YAAa,CACXa,MAAOJ,EACPK,UAAU,EACVC,cAAc,KAGlBV,OAAOW,eAAeP,EAAU,YAAa,CAC3CK,UAAU,IAERJ,GAAY,EAAeD,EAAUC,GCb5B,SAASO,IACtBA,EAAc,SAAqBC,EAAIC,GACrC,OAAO,IAAIC,EAAYF,OAAI,EAAQC,IAGrC,IAAIE,EAASC,OAAOrB,UAChBsB,EAAU,IAAIC,QAElB,SAASJ,EAAYF,EAAIO,EAAON,GAC9B,IAAIO,EAAQ,IAAIJ,OAAOJ,EAAIO,GAE3B,OAAOF,EAAQI,IAAID,EAAOP,GAAUI,EAAQK,IAAIV,IAAM,EAAeQ,EAAON,EAAYnB,WAG1F,SAAS4B,EAAYC,EAAQZ,GAC3B,IAAIa,EAAIR,EAAQK,IAAIV,GAEpB,OAAOb,OAAO2B,KAAKD,GAAGE,QAAO,SAAUd,EAAQ5B,GAC7C,OAAO4B,EAAO5B,GAAQuC,EAAOC,EAAExC,IAAQ4B,IACtCd,OAAOO,OAAO,OAGnB,OAAO,EAASQ,EAAaE,QAASF,EAAYnB,UAAUiC,KAAO,SAAUC,GAC3E,IAAIL,EAAST,EAAOa,KAAKE,KAAKC,KAAMF,GAEpC,OAAOL,IAAWA,EAAOX,OAASU,EAAYC,EAAQO,OAAQP,GAC7DV,EAAYnB,UAAUH,OAAOwC,SAAW,SAAUH,EAAKI,GACxD,GAAI,iBAAmBA,EAAc,CACnC,IAAIpB,EAASI,EAAQK,IAAIS,MAEzB,OAAOhB,EAAOvB,OAAOwC,SAASF,KAAKC,KAAMF,EAAKI,EAAaD,QAAQ,gBAAgB,SAAUE,EAAGjD,GAC9F,MAAO,IAAM4B,EAAO5B,OAIxB,GAAI,mBAAqBgD,EAAc,CACrC,IAAIb,EAAQW,KAEZ,OAAOhB,EAAOvB,OAAOwC,SAASF,KAAKC,KAAMF,GAAK,WAC5C,IAAIM,EAAOC,UACX,MAAO,UAAY9C,EAAQ6C,EAAKA,EAAKE,OAAS,MAAQF,EAAO,GAAGG,MAAMR,KAAKK,IAAOI,KAAKhB,EAAYY,EAAMf,IAASa,EAAaO,MAAMT,KAAMI,MAI/I,OAAOpB,EAAOvB,OAAOwC,SAASF,KAAKC,KAAMF,EAAKI,IAC7CtB,EAAY6B,MAAMT,KAAMK,WCvC7B,MATA,SAAqBK,GACjB,GAAIA,EAAQ,CACR,IAAIC,EAAID,EAAOE,MAAP,EAAa,aAAb,aAAyC,GAC7CC,EAAIH,EAAOE,MAAP,EAAa,oBAAb,eAAkD,GAE1D,MADa,kBAAID,IAAJ,OAAUE,IAAGC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,iBAAeC,KAAK,OC2BlE,MA1BA,SAAeC,GACX,IAAMC,EAAY,CAAC,MAAO,QAAS,UAAW,SACxCC,EAAOpD,OAAOqD,QAAQH,GAAOI,QAAO,SAAAP,GAAC,OAAKI,EAAUI,SAASR,EAAE,OACjES,EAAQ,GAKZ,OAJIN,EAAMM,QACNA,EAAQxD,OAAOqD,QAAQH,EAAMM,SAI7B,kBAAOrE,UAAWC,EAAlB,UACI,6BACKgE,EAAKN,KAAI,WAAOW,GAAO,IAAD,eAAXC,EAAW,KAATC,EAAS,KACfC,EAAcC,EAAYH,GAC9B,OAAO,SAAC,EAAD,CAA2BrE,MAAOuE,EAAatE,QAASqE,GAAxD,UAAkBF,GAAlB,OAAsBC,OAE/BF,EACEA,EAAMV,KAAI,WAAOW,GAAQ,IAAD,eAAZC,EAAY,KAAVC,EAAU,KACpBC,EAAcC,EAAYH,GAC9B,OAAO,SAAC,EAAD,CAA2BrE,MAAOuE,EAAatE,QAASqE,GAAxD,UAAkBF,GAAlB,OAAsBC,OAHvB,Y,yGCnB1B,EAAiC,mCAAjC,EAAsF,oCAAtF,EAAoI,4BAApI,EAAyM,2BAAzM,EAA2O,yB,uCCiD3O,MA3CA,SAAoBR,GAChB,IAAIY,EAAaZ,EAAMa,MAAMC,MAAM,KAAK,GACxC,GAAyBC,EAAAA,EAAAA,UAAS,CAACC,MAAO,KAAMC,aAAc,KAAMC,OAAQ,OAA5E,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+GAE+BC,EAAAA,EAAAA,gBAAyBV,GAFxD,WAEcW,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIC,MAAM,oBAJ5B,uBAM2BF,EAASG,OANpC,OAMcA,EANd,OAOQN,EAAS,CAACJ,MAAO,KAAMC,aAAc,KAAMC,OAAQQ,IAP3D,kDASQN,EAAS,CAACJ,OAAO,EAAMC,aAAc,KAAIU,QAAST,OAAQ,OATlE,2DADY,uBAAC,WAAD,wBAaZU,KACD,KAKC,iBAAK3F,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAK2F,IAAKC,EAAAA,EAAQlB,EAAWd,eAAgBiC,IAAI,eAAeC,QAAQ,WAE3Eb,EAAMH,OAAQ,SAACiB,EAAA,EAAD,CAAWhB,aAAcE,EAAMF,eAAkB,KAC9DE,EAAMH,MAUJ,KAVcG,EAAMD,QAKhB,iBAAKjF,UAAWC,EAAhB,WACI,wBAAKiF,EAAMD,OAAOgB,mBAClB,cAAGjG,UAAWC,EAAd,mBAAoCiF,EAAMD,OAAOiB,UAAjD,YAA8DhB,EAAMD,OAAON,eAC3E,cAAG3E,UAAWC,EAAd,SAA+BiF,EAAMD,OAAOkB,WAPxD,gBAAKnG,UAAWC,S,qFCnC5B,EAAiC,+BAAjC,EAAuE,qBAAvE,EAA8G,gCAA9G,EAA+J,+B,SCoB/J,MAjBA,YAAsC,IAArB2E,EAAoB,EAApBA,MAAO7E,EAAa,EAAbA,KAAMqG,EAAO,EAAPA,KAE1B,OACI,iBAAKpG,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAA6BF,IAC5B6E,GAAQ,gBAAK5E,UAAWC,EAAhB,UACG,gBAAK2F,IAAKS,EAAAA,EAASzB,GAAQkB,IAAI,kBAAkBC,QAAQ,WAE1D,KACVK,GAAO,gBAAKpG,UAAWC,EAAhB,UACI,gBAAK2F,IAAK3D,EAAAA,EAAMmE,GAAON,IAAI,aAAaC,QAAQ,WAEjD,U,iLCfvB,EAAiC,uCAAjC,EAA4F,0CAA5F,EAA0J,0C,uCCqD1J,MA3CA,WACI,OAA0BjB,EAAAA,EAAAA,UAAS,CAACC,MAAO,KAAMC,aAAc,KAAMmB,KAAM,OAA3E,eAAOjB,EAAP,KAAcC,EAAd,KACOmB,GAAMC,EAAAA,EAAAA,MAAND,GAkBP,OAhBAlB,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+GAE+BoB,EAAAA,EAAAA,YAAmBF,GAFlD,WAEchB,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIC,MAAM,yBAJ5B,uBAM2BF,EAASG,OANpC,OAMcA,EANd,OAOQN,EAAS,CAACJ,MAAO,KAAMC,aAAc,KAAMmB,KAAMV,IAPzD,kDASQN,EAAS,CAACJ,OAAO,EAAMC,aAAc,KAAIU,QAASS,KAAM,OAThE,2DADY,uBAAC,WAAD,wBAaZM,KACD,KAGC,UAAC,EAAAC,SAAD,WACKxB,EAAMH,OAAQ,SAACiB,EAAA,EAAD,CAAWhB,aAAcE,EAAMF,eAAkB,KAC/DE,EAAMH,MAAQ,KACTG,EAAMiB,MACR,UAAC,EAAAO,SAAD,YACI,SAACC,EAAA,EAAD,CAAY5G,KAAMmF,EAAMiB,KAAKpG,QAC7B,qBAASC,UAAWC,EAApB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAAC2G,EAAA,EAAD,CAAQ7G,KAAMmF,EAAMiB,KAAKpG,KAAM6E,MAAOM,EAAMiB,KAAKvB,SACjD,SAACiC,EAAA,GAAD,UAAW3B,EAAMiB,WAErB,iBAAKnG,UAAWC,EAAhB,WACI,SAAC6G,EAAA,EAAD,CAAYlC,MAAOM,EAAMiB,KAAKN,QAAQ,MACtC,SAACiB,EAAA,EAAD,CAAYlC,MAAOM,EAAMiB,KAAKN,QAAQ,eAVlC,SAACkB,EAAA,EAAD,S,sDCnCjBC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE+BC,MAAM,yDAA0D,CACnFC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc7B,EAFd,yBAQeA,GARf,+IAce8B,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6Bd,GAA7B,gGAE+BW,MAAM,0DAAD,OAA2DX,GAAM,CACzFY,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc7B,EAFd,yBAQeA,GARf,+IAae+B,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BtH,GAA/B,gGAE+BkH,MAAM,+DAAD,OAAgEK,UAAUvH,IAAS,CAC3GmH,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc7B,EAFd,yBAQeA,GARf,+IAcA,IAAMiC,EAAM,CACRH,cA1CJ,SAc6B,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,YA4BIJ,W,WA1CJA,OAAAA,EAAAA,MAAAA,KAAAA,YA0CgBK,gBA5B/B,SAa+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,aAkBf,O,sDC7CeG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE+BP,MAAM,uDAAwD,CACjFC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc7B,EAFd,yBAQeA,GARf,+IAcemC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BnB,GAA3B,gGAE+BW,MAAM,wDAAD,OAAyDX,GAAM,CACvFY,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc7B,EAFd,yBAQeA,GARf,+IAcA,IAAMiC,EAAM,CACRE,YA7BJ,SAc2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,YAgBXD,S,WA9BWA,OAAAA,EAAAA,MAAAA,KAAAA,aAiCf","sources":["webpack://formula1/./src/components/common/nameHeader/nameHeader.module.css?2008","components/common/nameHeader/NameHeader.js","webpack://formula1/./src/components/teamPage/tableRow/tableRow.module.css?b6e3","components/teamPage/tableRow/TableRow.js","webpack://formula1/./src/components/teamPage/contentTable/table.module.css?bfcc","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","utils/common/stringSplit.js","components/teamPage/contentTable/Table.js","webpack://formula1/./src/components/teamPage/driverCard/driverCard.module.css?91cc","components/teamPage/driverCard/DriverCard.js","webpack://formula1/./src/components/teamPage/header/header.module.css?fa22","components/teamPage/header/Header.js","webpack://formula1/./src/components/teamPage/teamPageLayout/teamPageLayout.module.css?ad6f","components/teamPage/teamPageLayout/TeamPageLayout.js","utils/api/heroku_api/hDrivers.js","utils/api/heroku_api/hTeams.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"nameHeader_main-container__IbbgN\"};","import React from 'react'\r\nimport styles from './nameHeader.module.css'\r\n\r\nfunction NameHeader({name}) {\r\n\r\n    return (\r\n        <div className={styles['main-container']}>\r\n            <h1>{name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameHeader","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"tableRow_row__6dYX1\",\"title\":\"tableRow_title__VkWon\",\"content\":\"tableRow_content__ZbAgn\"};","import React from 'react'\r\nimport styles from './tableRow.module.css'\r\n\r\nfunction TableRow({title, content}) {\r\n\r\n\r\n    return (\r\n        <tr className={styles.row}>\r\n            <td className={styles.title}>{title}</td>\r\n            <td className={styles.content}>{content}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"table_table__RqKN2\"};","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}","function stringSplit(string) {\r\n    if (string) {\r\n        let a = string.match(/^(?<small>[a-z]{1,})/g) || [];\r\n        let b = string.match(/(?<capital>[A-Z]{1}[a-z]{1,})/g) || [];\r\n        let result = [...a, ...b].map( x => x.toLowerCase()).join(' ')\r\n        return result\r\n    }\r\n}\r\n\r\nexport default stringSplit","import React from 'react'\r\nimport TableRow from '../tableRow/TableRow'\r\nimport styles from './table.module.css'\r\nimport stringSplit from '../../../utils/common/stringSplit'\r\n\r\nfunction Table(props) {\r\n    const blackList = ['_id', 'image', 'drivers', 'stats']\r\n    const data = Object.entries(props).filter(x => !blackList.includes(x[0]))\r\n    let stats = []\r\n    if (props.stats) {\r\n        stats = Object.entries(props.stats)\r\n    }\r\n    \r\n    return (\r\n        <table className={styles.table}>\r\n            <tbody>\r\n                {data.map(([k,v],i )=> {\r\n                    let transformed = stringSplit(k)\r\n                    return <TableRow key={`${i}${k}`} title={transformed} content={v}/>\r\n            })}\r\n                {!stats ? null : \r\n                    stats.map(([k,v],i ) => {\r\n                    let transformed = stringSplit(k)\r\n                    return <TableRow key={`${i}${k}`} title={transformed} content={v}/>\r\n            })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"driverCard_main-container__TRf4H\",\"image-container\":\"driverCard_image-container__Us9YH\",\"content\":\"driverCard_content__hZT06\",\"fade\":\"driverCard_fade__tRFCt\",\"driver\":\"driverCard_driver__3ps-g\",\"team\":\"driverCard_team__ZeM+t\"};","import React, {useEffect, useState} from 'react'\r\nimport styles from './driverCard.module.css'\r\nimport drivers from '../../../assets/images/drivers/driver-images'\r\nimport hDrivers from '../../../utils/api/heroku_api/hDrivers'\r\nimport ErrorComp from '../../common/errorComp/ErrorComp'\r\n\r\n\r\nfunction DriverCard(props) {\r\n    let familyName = props.image.split(' ')[1]\r\n    const [state,setState] = useState({error: null, errorMessage: null, driver: null})\r\n\r\n    useEffect(() => {\r\n        async function FetchDriver() {\r\n            try{\r\n                const response = await hDrivers.getDriverByName(familyName)\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch!')\r\n                }\r\n                const json = await response.json()\r\n                setState({error: null, errorMessage: null, driver: json})\r\n            } catch(err) {\r\n                setState({error: true, errorMessage: err.message, driver: null})\r\n            }\r\n        }\r\n        FetchDriver()\r\n    }, [])\r\n\r\n   \r\n    return (\r\n        \r\n        <div className={styles['main-container']}>\r\n            <div className={styles['image-container']}>\r\n                <img src={drivers[familyName.toLowerCase()]} alt='driver-image' loading='lazy'/>\r\n            </div>\r\n            {state.error ? <ErrorComp errorMessage={state.errorMessage}/> : null}\r\n            {!state.error ? (!state.driver ? \r\n            <div className={styles.content}>\r\n                 \r\n            </div>\r\n                    : \r\n                    <div className={styles.content}>\r\n                        <h1>{state.driver.permanentNumber}</h1>\r\n                        <p className={styles['driver']}>{`${state.driver.givenName} ${state.driver.familyName}`}</p>\r\n                        <p className={styles['team']}>{state.driver.team}</p>\r\n                    </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DriverCard","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"header_main-container__QRd0k\",\"name\":\"header_name__QVkTa\",\"image-container\":\"header_image-container__jWxSf\",\"flag-container\":\"header_flag-container__k0K1r\"};","import React from 'react'\r\nimport carLogos from '../../../assets/images/car_logos/car_logos'\r\nimport flags from '../../../assets/images/flags/flag-images'\r\nimport styles from './header.module.css'\r\nfunction Header({image, name, flag}) {\r\n\r\n    return (\r\n        <div className={styles['main-container']}>\r\n            <h2 className={styles.name}>{name}</h2>\r\n            {image ? <div className={styles[\"image-container\"]}>\r\n                        <img src={carLogos[image]} alt='team-logo-image' loading='lazy'/>\r\n                     </div>  \r\n                     : null}\r\n            {flag ? <div className={styles[\"flag-container\"]}>\r\n                        <img src={flags[flag]} alt='flag-image' loading='lazy'/>\r\n                     </div>  \r\n                     : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"teamPageLayout_main-container__0wrKB\",\"content-container\":\"teamPageLayout_content-container__eH+-U\",\"drivers-container\":\"teamPageLayout_drivers-container__0jQvg\"};","import React, {useState, useEffect, Fragment} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport hTeams from '../../../utils/api/heroku_api/hTeams'\r\nimport ErrorComp from '../../common/errorComp/ErrorComp'\r\nimport Spinner from '../../common/spinner/Spinner'\r\nimport NameHeader from '../../common/nameHeader/NameHeader'\r\nimport styles from './teamPageLayout.module.css'\r\nimport Table from '../contentTable/Table'\r\nimport Header from '../header/Header'\r\nimport DriverCard from '../driverCard/DriverCard'\r\n\r\nfunction TeamPageLayout() {\r\n    const [state, setState] = useState({error: null, errorMessage: null, team: null})\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        async function FetchTeam() {\r\n            try {\r\n                const response = await hTeams.getTeamById(id);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch team!')\r\n                }\r\n                const json = await response.json()\r\n                setState({error: null, errorMessage: null, team: json})\r\n            } catch(err) {\r\n                setState({error: true, errorMessage: err.message, team: null})\r\n            }\r\n        }\r\n        FetchTeam()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            {state.error ? <ErrorComp errorMessage={state.errorMessage}/> : null}\r\n            {state.error ? null : \r\n                (!state.team) ? <Spinner/> : \r\n                <Fragment>\r\n                    <NameHeader name={state.team.name}/>\r\n                    <section className={styles['main-container']}> \r\n                        <div className={styles['content-container']}>\r\n                            <Header name={state.team.name} image={state.team.image}/>\r\n                            <Table {...state.team}/>\r\n                        </div>\r\n                        <div className={styles['drivers-container']}>\r\n                            <DriverCard image={state.team.drivers[0]}/>\r\n                            <DriverCard image={state.team.drivers[1]}/>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TeamPageLayout","async function getDrivers() {\r\n    try {\r\n        const response = await fetch('https://boiling-brushlands-51072.herokuapp.com/drivers', {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch(err) {\r\n        return err\r\n    }\r\n}\r\n\r\nasync function getDriverById(id) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/drivers/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\nasync function getDriverByName(name) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/drivers?name=${encodeURI(name)}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nconst api = {\r\n    getDriverById, getDrivers, getDriverByName\r\n}\r\n\r\nexport default api","async function getTeams() {\r\n    try {\r\n        const response = await fetch('https://boiling-brushlands-51072.herokuapp.com/teams', {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nasync function getTeamById(id) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/teams/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nconst api = {\r\n    getTeamById,\r\n    getTeams\r\n}\r\n\r\nexport default api"],"names":["name","className","styles","title","content","_typeof","obj","Symbol","iterator","constructor","prototype","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","create","value","writable","configurable","defineProperty","_wrapRegExp","re","groups","BabelRegExp","_super","RegExp","_groups","WeakMap","flags","_this","set","get","buildGroups","result","g","keys","reduce","exec","str","call","this","replace","substitution","_","args","arguments","length","slice","push","apply","string","a","match","b","map","x","toLowerCase","join","props","blackList","data","entries","filter","includes","stats","i","k","v","transformed","stringSplit","familyName","image","split","useState","error","errorMessage","driver","state","setState","useEffect","hDrivers","response","ok","Error","json","message","FetchDriver","src","drivers","alt","loading","ErrorComp","permanentNumber","givenName","team","flag","carLogos","id","useParams","hTeams","FetchTeam","Fragment","NameHeader","Header","Table","DriverCard","Spinner","getDrivers","fetch","headers","credentials","getDriverById","getDriverByName","encodeURI","api","getTeams","getTeamById"],"sourceRoot":""}