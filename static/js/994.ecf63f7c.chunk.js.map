{"version":3,"file":"static/js/994.ecf63f7c.chunk.js","mappings":"kPACA,EAAyB,yBAAzB,EAA0D,wB,SC6E1D,MAzEA,WAEI,IAAIA,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,UAAS,CACrCC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,aAAc,KALlB,eAAOC,EAAP,KAAiBC,EAAjB,KAOMC,GAAeC,EAAAA,EAAAA,UACrB,SAASC,EAAcC,GAAI,IAAD,EACtBJ,GAAY,kBACLD,GADI,mBACOK,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,QAD9B,wBACmD,IADnD,KAdC,wCAkBhB,WAA6BH,GAA7B,8EACIA,EAAEI,iBACFP,EAAaQ,QAAQC,UAAW,EAFpC,kBAI6BtB,EAAQuB,SAASZ,GAJ9C,WAIYa,EAJZ,QAKqBC,cAAgBD,EAASE,YAClCvB,EAAS,gBAETqB,EAASG,MARrB,uBASYd,EAAaQ,QAAQC,UAAW,EAC1B,IAAIM,MAAMJ,EAASG,MAAME,SAV3C,YAYYL,EAASK,QAZrB,uBAaYhB,EAAaQ,QAAQC,UAAW,EAC1B,IAAIM,MAAMJ,EAASK,SAdrC,0DAiBQhB,EAAaQ,QAAQC,UAAW,EAChCV,GAAY,kBACLD,GADI,IAEPD,aAAc,KAAImB,WApB9B,2DAlBgB,sBA2ChB,OACI,kBAAMC,SA5CM,4CA4CZ,WAGI,0BACI,8CAEJ,kBAAOC,QAAS,WAAhB,uBACA,kBAAOC,KAAK,OAAOd,GAAG,WAAWe,YAAY,WAAWd,MAAOR,EAASL,SAAU4B,SAAUnB,KAC5F,kBAAOgB,QAAS,QAAhB,4BACA,kBAAOC,KAAK,OAAOd,GAAG,QAAQe,YAAY,QAAQd,MAAOR,EAASJ,MAAO2B,SAAUnB,KACnF,kBAAOgB,QAAS,WAAhB,uBACA,kBAAOC,KAAK,WAAWd,GAAG,WAAWe,YAAY,WAAWd,MAAOR,EAASH,SAAU0B,SAAUnB,KAChG,kBAAOgB,QAAS,kBAAhB,+BACA,kBAAOC,KAAK,WAAWd,GAAG,kBAAkBe,YAAY,mBAAmBd,MAAOR,EAASF,gBAAiByB,SAAUnB,KACtH,gCACI,cAAGoB,UAAWC,EAAd,SAA6BzB,EAASD,gBACtC,kDACA,2BACI,uCACA,oDACA,kDACA,0CAGR,mBAAQyB,UAAWC,EAAeJ,KAAK,SAASK,IAAKxB,EAArD","sources":["webpack://formula1/./src/components/register/Register/register.module.css?7fe6","components/register/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"register_button__5Nf+h\",\"error\":\"register_error__FuITU\"};","import React, { useState, useRef, useContext } from 'react';\r\nimport userContext from '../../../context/userContext'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport styles from './register.module.css'\r\n\r\nfunction Register() {\r\n\r\n    let context = useContext(userContext);\r\n    const navigate = useNavigate()\r\n\r\n    const [formdata, setFormdata] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errorMessage: ''\r\n    })\r\n    const submitButton = useRef()\r\n    function changeHandler(e) {\r\n        setFormdata({\r\n            ...formdata, [e.target.id]: e.target.value, errorMessage: ''\r\n        })\r\n    }\r\n    async function submitHandler(e) {\r\n        e.preventDefault();\r\n        submitButton.current.disabled = true;\r\n        try {\r\n            let response = await context.register(formdata)\r\n            if (response.acknowledged && response.insertedId) {\r\n                navigate('/auth/login')\r\n            }\r\n            if (response.error) {\r\n                submitButton.current.disabled = false;\r\n                throw new Error(response.error.message)\r\n            }\r\n            if (response.message) {\r\n                submitButton.current.disabled = false;\r\n                throw new Error(response.message)\r\n            }\r\n        } catch(err) {\r\n            submitButton.current.disabled = false;\r\n            setFormdata({\r\n                ...formdata,\r\n                errorMessage: err.message\r\n            })\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit = {\r\n            submitHandler\r\n        } >\r\n            <div>\r\n                <h2>CREATE ACCOUNT</h2>\r\n            </div>\r\n            <label htmlFor={'username'}>Username</label>\r\n            <input type='text' id='username' placeholder='username' value={formdata.username} onChange={changeHandler}></input>\r\n            <label htmlFor={'email'}>Email address</label>\r\n            <input type='text' id='email' placeholder='email' value={formdata.email} onChange={changeHandler}></input>\r\n            <label htmlFor={'password'}>Password</label>\r\n            <input type='password' id='password' placeholder='password' value={formdata.password} onChange={changeHandler}></input>\r\n            <label htmlFor={'confirmPassword'}>Confirm password</label>\r\n            <input type='password' id='confirmPassword' placeholder='confirm password' value={formdata.confirmPassword} onChange={changeHandler}></input>\r\n            <section>\r\n                <p className={styles.error}>{formdata.errorMessage}</p>\r\n                <p >Password must contain</p>\r\n                <ul>\r\n                    <li>Uppercase</li>\r\n                    <li>Lowercase (at least 2)</li>\r\n                    <li>8 or more characters</li>\r\n                    <li>Number</li>\r\n                </ul>\r\n            </section>\r\n            <button className={styles.button} type='submit' ref={submitButton}>REGISTER</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Register"],"names":["context","useContext","userContext","navigate","useNavigate","useState","username","email","password","confirmPassword","errorMessage","formdata","setFormdata","submitButton","useRef","changeHandler","e","target","id","value","preventDefault","current","disabled","register","response","acknowledged","insertedId","error","Error","message","onSubmit","htmlFor","type","placeholder","onChange","className","styles","ref"],"sourceRoot":""}