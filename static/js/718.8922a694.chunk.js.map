{"version":3,"file":"static/js/718.8922a694.chunk.js","mappings":"oJACA,EAAiC,mC,SCWjC,MATA,YAA6B,IAARA,EAAO,EAAPA,KAEjB,OACI,gBAAKC,UAAWC,EAAhB,UACI,wBAAKF,Q,iECNjB,EAAsB,sBAAtB,EAAoD,wBAApD,EAAsF,0B,SCatF,MAXA,SAAkBG,GAGd,OACI,gBAAIF,UAAWC,EAAf,WACI,eAAID,UAAWC,EAAf,SAA8BC,EAAMC,SACpC,eAAIH,UAAWC,EAAf,SAAgCC,EAAME,cCRlD,EAAwB,qBC4BxB,MAzBA,SAAeF,GACX,IAAMG,EAAY,CAAC,MAAO,QAAS,UAAW,SACxCC,EAAOC,OAAOC,QAAQN,GAAOO,QAAO,SAAAC,GAAC,OAAKL,EAAUM,SAASD,EAAE,OACjEE,EAAQ,GAKZ,OAJIV,EAAMU,QACNA,EAAQL,OAAOC,QAAQN,EAAMU,SAI7B,kBAAOZ,UAAWC,EAAlB,UACI,6BACKK,EAAKO,KAAI,SAACH,EAAEI,GAEb,OADIC,QAAQC,IAAIN,EAAEI,IACX,SAAC,EAAD,CAA8BX,MAAOO,EAAE,GAAIN,QAASM,EAAE,IAAtD,UAAkBI,GAAlB,OAAsBJ,EAAE,QAE7BE,EACEA,EAAMC,KAAI,SAACH,EAAEI,GACjB,OAAO,SAAC,EAAD,CAA8BX,MAAOO,EAAE,GAAIN,QAASM,EAAE,IAAtD,UAAkBI,GAAlB,OAAsBJ,EAAE,QAFrB,Y,yGClB1B,EAAiC,mCAAjC,EAAsF,oCAAtF,EAAoI,4BAApI,EAAyM,2BAAzM,EAA2O,yB,uCCiD3O,MA3CA,SAAoBR,GAChB,IAAIe,EAAaf,EAAMgB,MAAMC,MAAM,KAAK,GACxC,GAAyBC,EAAAA,EAAAA,UAAS,CAACC,MAAO,KAAMC,aAAc,KAAMC,OAAQ,OAA5E,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+GAE+BC,EAAAA,EAAAA,gBAAyBV,GAFxD,WAEcW,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIC,MAAM,oBAJ5B,uBAM2BF,EAASG,OANpC,OAMcA,EANd,OAOQN,EAAS,CAACJ,MAAO,KAAMC,aAAc,KAAMC,OAAQQ,IAP3D,kDASQN,EAAS,CAACJ,OAAO,EAAMC,aAAc,KAAIU,QAAST,OAAQ,OATlE,2DADY,uBAAC,WAAD,wBAaZU,KACD,KAKC,iBAAKjC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKiC,IAAKC,EAAAA,EAAQlB,EAAWmB,eAAgBC,IAAI,eAAeC,QAAQ,WAE3Ed,EAAMH,OAAQ,SAACkB,EAAA,EAAD,CAAWjB,aAAcE,EAAMF,eAAkB,KAC9DE,EAAMH,MAUJ,KAVcG,EAAMD,QAKhB,iBAAKvB,UAAWC,EAAhB,WACI,wBAAKuB,EAAMD,OAAOiB,mBAClB,cAAGxC,UAAWC,EAAd,mBAAoCuB,EAAMD,OAAOkB,UAAjD,YAA8DjB,EAAMD,OAAON,eAC3E,cAAGjB,UAAWC,EAAd,SAA+BuB,EAAMD,OAAOmB,WAPxD,gBAAK1C,UAAWC,S,qFCnC5B,EAAiC,+BAAjC,EAAuE,qBAAvE,EAA8G,gCAA9G,EAA+J,+B,SCoB/J,MAjBA,YAAsC,IAArBiB,EAAoB,EAApBA,MAAOnB,EAAa,EAAbA,KAAM4C,EAAO,EAAPA,KAE1B,OACI,iBAAK3C,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAA6BF,IAC5BmB,GAAQ,gBAAKlB,UAAWC,EAAhB,UACG,gBAAKiC,IAAKU,EAAAA,EAAS1B,GAAQmB,IAAI,kBAAkBC,QAAQ,WAE1D,KACVK,GAAO,gBAAK3C,UAAWC,EAAhB,UACI,gBAAKiC,IAAKW,EAAAA,EAAMF,GAAON,IAAI,aAAaC,QAAQ,WAEjD,U,iLCfvB,EAAiC,uCAAjC,EAA4F,0CAA5F,EAA0J,0C,uCCqD1J,MA3CA,WACI,OAA0BlB,EAAAA,EAAAA,UAAS,CAACC,MAAO,KAAMC,aAAc,KAAMoB,KAAM,OAA3E,eAAOlB,EAAP,KAAcC,EAAd,KACOqB,GAAMC,EAAAA,EAAAA,MAAND,GAkBP,OAhBApB,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+GAE+BsB,EAAAA,EAAAA,YAAmBF,GAFlD,WAEclB,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIC,MAAM,yBAJ5B,uBAM2BF,EAASG,OANpC,OAMcA,EANd,OAOQN,EAAS,CAACJ,MAAO,KAAMC,aAAc,KAAMoB,KAAMX,IAPzD,kDASQN,EAAS,CAACJ,OAAO,EAAMC,aAAc,KAAIU,QAASU,KAAM,OAThE,2DADY,uBAAC,WAAD,wBAaZO,KACD,KAGC,UAAC,EAAAC,SAAD,WACK1B,EAAMH,OAAQ,SAACkB,EAAA,EAAD,CAAWjB,aAAcE,EAAMF,eAAkB,KAC/DE,EAAMH,MAAQ,KACTG,EAAMkB,MACR,UAAC,EAAAQ,SAAD,YACI,SAACC,EAAA,EAAD,CAAYpD,KAAMyB,EAAMkB,KAAK3C,QAC7B,qBAASC,UAAWC,EAApB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAACmD,EAAA,EAAD,CAAQrD,KAAMyB,EAAMkB,KAAK3C,KAAMmB,MAAOM,EAAMkB,KAAKxB,SACjD,SAACmC,EAAA,GAAD,UAAW7B,EAAMkB,WAErB,iBAAK1C,UAAWC,EAAhB,WACI,SAACqD,EAAA,EAAD,CAAYpC,MAAOM,EAAMkB,KAAKP,QAAQ,MACtC,SAACmB,EAAA,EAAD,CAAYpC,MAAOM,EAAMkB,KAAKP,QAAQ,eAVlC,SAACoB,EAAA,EAAD,S,sDCnCjBC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE+BC,MAAM,yDAA0D,CACnFC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc/B,EAFd,yBAQeA,GARf,+IAcegC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6Bd,GAA7B,gGAE+BW,MAAM,0DAAD,OAA2DX,GAAM,CACzFY,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc/B,EAFd,yBAQeA,GARf,+IAaeiC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+B9D,GAA/B,gGAE+B0D,MAAM,+DAAD,OAAgEK,UAAU/D,IAAS,CAC3G2D,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc/B,EAFd,yBAQeA,GARf,+IAcA,IAAMmC,EAAM,CACRH,cA1CJ,SAc6B,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,YA4BIJ,W,WA1CJA,OAAAA,EAAAA,MAAAA,KAAAA,YA0CgBK,gBA5B/B,SAa+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,aAkBf,O,sDC7CeG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE+BP,MAAM,uDAAwD,CACjFC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc/B,EAFd,yBAQeA,GARf,+IAceqC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BnB,GAA3B,gGAE+BW,MAAM,wDAAD,OAAyDX,GAAM,CACvFY,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YANzB,cAEc/B,EAFd,yBAQeA,GARf,+IAcA,IAAMmC,EAAM,CACRE,YA7BJ,SAc2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,YAgBXD,S,WA9BWA,OAAAA,EAAAA,MAAAA,KAAAA,aAiCf","sources":["webpack://formula1/./src/components/common/nameHeader/nameHeader.module.css?2008","components/common/nameHeader/NameHeader.js","webpack://formula1/./src/components/teamPage/tableRow/tableRow.module.css?b6e3","components/teamPage/tableRow/TableRow.js","webpack://formula1/./src/components/teamPage/contentTable/table.module.css?bfcc","components/teamPage/contentTable/Table.js","webpack://formula1/./src/components/teamPage/driverCard/driverCard.module.css?91cc","components/teamPage/driverCard/DriverCard.js","webpack://formula1/./src/components/teamPage/header/header.module.css?fa22","components/teamPage/header/Header.js","webpack://formula1/./src/components/teamPage/teamPageLayout/teamPageLayout.module.css?ad6f","components/teamPage/teamPageLayout/TeamPageLayout.js","utils/api/heroku_api/hDrivers.js","utils/api/heroku_api/hTeams.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"nameHeader_main-container__IbbgN\"};","import React from 'react'\r\nimport styles from './nameHeader.module.css'\r\n\r\nfunction NameHeader({name}) {\r\n\r\n    return (\r\n        <div className={styles['main-container']}>\r\n            <h1>{name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameHeader","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"tableRow_row__6dYX1\",\"title\":\"tableRow_title__VkWon\",\"content\":\"tableRow_content__ZbAgn\"};","import React from 'react'\r\nimport styles from './tableRow.module.css'\r\n\r\nfunction TableRow(props) {\r\n\r\n\r\n    return (\r\n        <tr className={styles.row}>\r\n            <td className={styles.title}>{props.title}</td>\r\n            <td className={styles.content}>{props.content}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"table_table__RqKN2\"};","import React from 'react'\r\nimport TableRow from '../tableRow/TableRow'\r\nimport styles from './table.module.css'\r\n\r\nfunction Table(props) {\r\n    const blackList = ['_id', 'image', 'drivers', 'stats']\r\n    const data = Object.entries(props).filter(x => !blackList.includes(x[0]))\r\n    let stats = []\r\n    if (props.stats) {\r\n        stats = Object.entries(props.stats)\r\n    }\r\n    \r\n    return (\r\n        <table className={styles.table}>\r\n            <tbody>\r\n                {data.map((x,i )=> {\r\n                    console.log(x,i)\r\n                return <TableRow key={`${i}${x[0]}`} title={x[0]} content={x[1]}/>\r\n            })}\r\n                {!stats ? null : \r\n                    stats.map((x,i )=> {\r\n                return <TableRow key={`${i}${x[0]}`} title={x[0]} content={x[1]}/>\r\n            })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"driverCard_main-container__TRf4H\",\"image-container\":\"driverCard_image-container__Us9YH\",\"content\":\"driverCard_content__hZT06\",\"fade\":\"driverCard_fade__tRFCt\",\"driver\":\"driverCard_driver__3ps-g\",\"team\":\"driverCard_team__ZeM+t\"};","import React, {useEffect, useState} from 'react'\r\nimport styles from './driverCard.module.css'\r\nimport drivers from '../../../assets/images/drivers/driver-images'\r\nimport hDrivers from '../../../utils/api/heroku_api/hDrivers'\r\nimport ErrorComp from '../../common/errorComp/ErrorComp'\r\n\r\n\r\nfunction DriverCard(props) {\r\n    let familyName = props.image.split(' ')[1]\r\n    const [state,setState] = useState({error: null, errorMessage: null, driver: null})\r\n\r\n    useEffect(() => {\r\n        async function FetchDriver() {\r\n            try{\r\n                const response = await hDrivers.getDriverByName(familyName)\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch!')\r\n                }\r\n                const json = await response.json()\r\n                setState({error: null, errorMessage: null, driver: json})\r\n            } catch(err) {\r\n                setState({error: true, errorMessage: err.message, driver: null})\r\n            }\r\n        }\r\n        FetchDriver()\r\n    }, [])\r\n\r\n   \r\n    return (\r\n        \r\n        <div className={styles['main-container']}>\r\n            <div className={styles['image-container']}>\r\n                <img src={drivers[familyName.toLowerCase()]} alt='driver-image' loading='lazy'/>\r\n            </div>\r\n            {state.error ? <ErrorComp errorMessage={state.errorMessage}/> : null}\r\n            {!state.error ? (!state.driver ? \r\n            <div className={styles.content}>\r\n                 \r\n            </div>\r\n                    : \r\n                    <div className={styles.content}>\r\n                        <h1>{state.driver.permanentNumber}</h1>\r\n                        <p className={styles['driver']}>{`${state.driver.givenName} ${state.driver.familyName}`}</p>\r\n                        <p className={styles['team']}>{state.driver.team}</p>\r\n                    </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DriverCard","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"header_main-container__QRd0k\",\"name\":\"header_name__QVkTa\",\"image-container\":\"header_image-container__jWxSf\",\"flag-container\":\"header_flag-container__k0K1r\"};","import React from 'react'\r\nimport carLogos from '../../../assets/images/car_logos/car_logos'\r\nimport flags from '../../../assets/images/flags/flag-images'\r\nimport styles from './header.module.css'\r\nfunction Header({image, name, flag}) {\r\n\r\n    return (\r\n        <div className={styles['main-container']}>\r\n            <h2 className={styles.name}>{name}</h2>\r\n            {image ? <div className={styles[\"image-container\"]}>\r\n                        <img src={carLogos[image]} alt='team-logo-image' loading='lazy'/>\r\n                     </div>  \r\n                     : null}\r\n            {flag ? <div className={styles[\"flag-container\"]}>\r\n                        <img src={flags[flag]} alt='flag-image' loading='lazy'/>\r\n                     </div>  \r\n                     : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"teamPageLayout_main-container__0wrKB\",\"content-container\":\"teamPageLayout_content-container__eH+-U\",\"drivers-container\":\"teamPageLayout_drivers-container__0jQvg\"};","import React, {useState, useEffect, Fragment} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport hTeams from '../../../utils/api/heroku_api/hTeams'\r\nimport ErrorComp from '../../common/errorComp/ErrorComp'\r\nimport Spinner from '../../common/spinner/Spinner'\r\nimport NameHeader from '../../common/nameHeader/NameHeader'\r\nimport styles from './teamPageLayout.module.css'\r\nimport Table from '../contentTable/Table'\r\nimport Header from '../header/Header'\r\nimport DriverCard from '../driverCard/DriverCard'\r\n\r\nfunction TeamPageLayout() {\r\n    const [state, setState] = useState({error: null, errorMessage: null, team: null})\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        async function FetchTeam() {\r\n            try {\r\n                const response = await hTeams.getTeamById(id);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch team!')\r\n                }\r\n                const json = await response.json()\r\n                setState({error: null, errorMessage: null, team: json})\r\n            } catch(err) {\r\n                setState({error: true, errorMessage: err.message, team: null})\r\n            }\r\n        }\r\n        FetchTeam()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            {state.error ? <ErrorComp errorMessage={state.errorMessage}/> : null}\r\n            {state.error ? null : \r\n                (!state.team) ? <Spinner/> : \r\n                <Fragment>\r\n                    <NameHeader name={state.team.name}/>\r\n                    <section className={styles['main-container']}> \r\n                        <div className={styles['content-container']}>\r\n                            <Header name={state.team.name} image={state.team.image}/>\r\n                            <Table {...state.team}/>\r\n                        </div>\r\n                        <div className={styles['drivers-container']}>\r\n                            <DriverCard image={state.team.drivers[0]}/>\r\n                            <DriverCard image={state.team.drivers[1]}/>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TeamPageLayout","async function getDrivers() {\r\n    try {\r\n        const response = await fetch('https://boiling-brushlands-51072.herokuapp.com/drivers', {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch(err) {\r\n        return err\r\n    }\r\n}\r\n\r\nasync function getDriverById(id) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/drivers/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\nasync function getDriverByName(name) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/drivers?name=${encodeURI(name)}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nconst api = {\r\n    getDriverById, getDrivers, getDriverByName\r\n}\r\n\r\nexport default api","async function getTeams() {\r\n    try {\r\n        const response = await fetch('https://boiling-brushlands-51072.herokuapp.com/teams', {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nasync function getTeamById(id) {\r\n    try {\r\n        const response = await fetch(`https://boiling-brushlands-51072.herokuapp.com/teams/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        return response\r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nconst api = {\r\n    getTeamById,\r\n    getTeams\r\n}\r\n\r\nexport default api"],"names":["name","className","styles","props","title","content","blackList","data","Object","entries","filter","x","includes","stats","map","i","console","log","familyName","image","split","useState","error","errorMessage","driver","state","setState","useEffect","hDrivers","response","ok","Error","json","message","FetchDriver","src","drivers","toLowerCase","alt","loading","ErrorComp","permanentNumber","givenName","team","flag","carLogos","flags","id","useParams","hTeams","FetchTeam","Fragment","NameHeader","Header","Table","DriverCard","Spinner","getDrivers","fetch","headers","credentials","getDriverById","getDriverByName","encodeURI","api","getTeams","getTeamById"],"sourceRoot":""}